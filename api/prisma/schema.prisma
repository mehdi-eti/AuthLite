generator client {
    provider = "prisma-client-js"
    output   = "../src/generated/prisma"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    id              String   @id @default(uuid())
    email           String   @unique
    username        String   @unique
    phone           String   @unique
    firstName       String?
    lastName        String?
    passwordHash    String?
    isEmailVerified Boolean  @default(false)
    isActive        Boolean  @default(true)
    role            Role     @default(USER)
    googleId        String?  @unique
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt

    sessions      Session[]
    oAuthAccounts OAuthAccount[]
    otps          OTP[]
}

model Session {
    id        String   @id @default(uuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    token     String   @unique
    deviceId  String
    ip        String?
    userAgent String?
    expiresAt DateTime
    createdAt DateTime @default(now())

    @@index([userId])
}

model OAuthAccount {
    id         String   @id @default(uuid())
    provider   String
    providerId String   @unique
    user       User     @relation(fields: [userId], references: [id])
    userId     String
    createdAt  DateTime @default(now())
}

model OTP {
    id        String   @id @default(uuid())
    code      String
    type      OTPType
    expiresAt DateTime
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    createdAt DateTime @default(now())
}

model VerificationToken {
    id        String   @id @default(uuid())
    token     String   @unique
    code      String
    type      String // "EMAIL_VERIFICATION" | "RESET_PASSWORD" | "MAGIC_LINK"
    userId    String
    expiresAt DateTime
    createdAt DateTime @default(now())

    @@index([userId, type])
}

enum Role {
    USER
    ADMIN
    MODERATOR
}

enum OTPType {
    LOGIN
    VERIFY_EMAIL
    RESET_PASSWORD
}
